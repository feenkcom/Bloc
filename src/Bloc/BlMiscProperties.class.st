Class {
	#name : #BlMiscProperties,
	#superclass : #Object,
	#traits : 'TBlDebug',
	#classTraits : 'TBlDebug classTrait',
	#instVars : [
		'clipChildren',
		'focused',
		'mouseTransparent',
		'userData',
		'debug',
		'label',
		'compositingMode'
	],
	#category : #'Bloc-Basic-Support'
}

{ #category : #accessing }
BlMiscProperties >> clipChildren [
	^ clipChildren
]

{ #category : #accessing }
BlMiscProperties >> clipChildren: anObject [
	clipChildren := anObject
]

{ #category : #accessing }
BlMiscProperties >> compositingMode [
	<return: #BlCompositingMode>

	^ compositingMode
]

{ #category : #accessing }
BlMiscProperties >> compositingMode: aBlCompositingMode [
	compositingMode := aBlCompositingMode
]

{ #category : #accessing }
BlMiscProperties >> debug [
	^ debug
]

{ #category : #accessing }
BlMiscProperties >> debug: aBoolean [
	debug := aBoolean
]

{ #category : #accessing }
BlMiscProperties >> focused [
	^ focused
]

{ #category : #accessing }
BlMiscProperties >> focused: aBoolean [
	focused := aBoolean
]

{ #category : #initialization }
BlMiscProperties >> initialize [
	super initialize.
	
	clipChildren := true.
	compositingMode := BlCompositingWithoutLayerMode uniqueInstance.
	userData := IdentityDictionary new.
	debug := false.
	label := ''.
	focused := false
]

{ #category : #accessing }
BlMiscProperties >> label [
	<return: #String>

	^ label
]

{ #category : #accessing }
BlMiscProperties >> label: aString [
	label := aString asString
]

{ #category : #accessing }
BlMiscProperties >> userData [
	^userData
]

{ #category : #accessing }
BlMiscProperties >> userData: aDict [
	userData := aDict
]
